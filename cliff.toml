# git-cliff ~ default configuration file
# https://git-cliff.org/docs/configuration
#
# Lines starting with "#" are comments.
# Configuration options are organized into tables and keys.
# See documentation for more information on available options.

[changelog]
# template for the changelog header
header = """
# Changelog\n
All notable changes to this project will be documented in this file.\n
"""
# template for the changelog body
# https://keats.github.io/tera/docs/#introduction
body = """
{% macro print_commit(commit) -%}
    - {% if commit.scope %}*({{ commit.scope }})* {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message | upper_first }} \
        ({{ commit.id | truncate(length=7, end="") }})\
{% endmacro -%}

{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor -%}
"""
# template for the changelog footer
footer = """
<!-- generated by git-cliff -->
"""

trim = true # remove the leading and trailing spaces

# postprocessors = [
#   { pattern = '<REPO>', replace = "https://gitlab.fadutec.dev/infra/devops/terraform-aws-container" },
# ]


[git]
conventional_commits = true
filter_unconventional = false # filter out the commits that are not conventional
split_commits = false # process each line of a commit as an individual commit

# regex for preprocessing the commit messages
commit_preprocessors = [
  # { pattern = '\((\w+\s)?#([0-9]+)\)', replace = "([#${2}](<REPO>/issues/${2}))"},
  # { pattern = '.*', replace_command = 'typos --write-changes -' },
]

# regex for parsing and grouping commits
commit_parsers = [
  { message = "^security", group = "<!-- 0 -->🛡️ Security updates" },
  { message = "^feat", group = "<!-- 1 -->🚀 New Features" },
  { message = "^improve", group = "<!-- 2 -->⚡ Improvements" },
  { message = "^fix", group = "<!-- 3 -->🐛 Bug Fixes" },
  { message = "^ci", group = "<!-- 4 -->🔧 CI changes" },
  { message = "^chore", group = "<!-- 5 -->🧰 Maintenance" },
  { message = "^refactor", group = "<!-- 6 -->🚜 Refactor" },
  { message = "^style", group = "<!-- 7 -->🎨 Style" },
  { message = "^doc", group = "<!-- 8 -->📚 Documentation" },
  { message = "^Merge", skip = true },
  { message = "^Resolve", skip = true },
  { message = "See merge request", skip = true },
  { message = "Closes [A-Z]+-[0-9]+", skip = true },
  { message = ".*", group = "<!-- 9 -->💼 Other" },
]

filter_commits = true # filter out the commits that are not matched by commit parsers
topo_order = false # sort the tags topologically
sort_commits = "newest" # sort the commits inside sections by oldest/newest order
